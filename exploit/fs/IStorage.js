var utils = require("../utils");
var Result = require("../Result");

function IStorage (sc, handle) {
	this.sc = sc;
	this.handle = handle;
}

IStorage.prototype.Read = function(buffer, offset, length) {
	return this.sc.ipcMsg(0).datau64(offset, length)
		.bDescriptor(buffer, buffer.byteLength, 1)
		.sendTo(this.handle)
		.asResult();
}

IStorage.prototype.GetSize = function() {
	return this.sc.ipcMsg(4).sendTo(this.handle).asResult()
		.map((r) => utils.pad64(r.data));
};

// for SploitCore.prototype.dumpToFile
IStorage.prototype.makeReader = function() {
	var s = this;
	return (ab, offset, size) => {
		return s.Read(ab, offset, size);
	};
};

module.exports = IStorage;
